import { SignInButton, useUser } from "@clerk/nextjs";
import type { NextPage } from "next";

import Head from "next/head";

import { api } from "~/utils/api";
import type { RouterOutputs } from "~/utils/api";

import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";
import Image from "next/image";
import React from "react";

dayjs.extend(relativeTime);

const CreatePostWizard = () => {
  const { user } = useUser();

  const [content, setContent] = React.useState<string>("");

  if (!user) return null;

  const ctx = api.useContext();

  const { mutate } = api.posts.create.useMutation({
    onSuccess: () => {
      setContent("");
      void ctx.posts.getAll.invalidate();
    },
  });

  return (
    <div className="flex w-full gap-4">
      <Image
        width={64}
        height={64}
        alt={"Profile image"}
        className="rounded-full"
        src={user.profileImageUrl}
      />
      <input
        type="text"
        value={content}
        placeholder="Type some emojis"
        onChange={(e) => setContent(e.target.value)}
        className="grow bg-transparent outline-none"
      />
      <button onClick={() => mutate({ content })}>Post</button>
    </div>
  );
};

type PostWithUser = RouterOutputs["posts"]["getAll"][number];

const PostView = (props: PostWithUser) => {
  const { post, author } = props;

  return (
    <div className="flex items-center gap-4 border-b border-slate-400 p-4">
      <Image
        width={56}
        height={56}
        alt={author.username}
        className="rounded-full"
        src={author.profileImageUrl}
      />
      <div>
        <div className="flex gap-2 text-slate-300">
          <span>{`@${author.username}`}</span>
          <span className="font-thin">{` Â· ${dayjs(
            post.createdAt
          ).fromNow()}`}</span>
        </div>
        <span className="text-xl">{post.content}</span>
      </div>
    </div>
  );
};

const Home: NextPage = () => {
  const user = useUser();

  const { data, isLoading } = api.posts.getAll.useQuery();

  if (isLoading) return <div>Loading...</div>;

  if (!data) return <div>Something went wrong</div>;

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-screen justify-center">
        <div className="h-full w-full border-x border-slate-400 md:max-w-4xl">
          <div className="border-b border-slate-400 p-4">
            {!user.isSignedIn && (
              <div className="flex justify-center">
                <SignInButton />
              </div>
            )}
            {user.isSignedIn && <CreatePostWizard />}
          </div>
          <div className="flex flex-col">
            {[...data, ...data]?.map((postWithUser) => (
              <PostView key={postWithUser.post.id} {...postWithUser} />
            ))}
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;
